<project name="xstream" default="library">

    <!-- Give user a chance to override specific properties -->
    <property file="build.properties"/>
    
    <property name="version" value="SNAPSHOT"/>

    <property name="java.build.dir" value="build/java"/>
    <property name="test.build.dir" value="build/test"/>
    <property name="tools.build.dir" value="build/tools"/>
    <property name="java.compile.debug" value="yes"/>
    <property name="test.src.includes" value="**/*Test.java"/>
    <property name="test.src.excludes" value="**/Abstract*"/>
    <property name="test.reports.dir" value="build/test-reports"/>
    <property name="junit.haltonfailure" value="false"/>

    <available property="jdk1.4.available" classname="java.lang.StackTraceElement"/>
    <available property="jdk1.5.available" classname="java.lang.Enum"/>

    <path id="classpath">
        <fileset dir="lib">
            <include unless="jdk1.4.available" name="jdk1.3/*.jar"/>
        </fileset>
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.build.dir}"/>
        <pathelement path="${test.build.dir}"/>
    </path>

    <target name="library" depends="compile, test, jar" description="Build and test xstream.jar"/>

    <target name="all" depends="clean, library, javadoc, dist" description="Rebuild complete distribution bundle"/>

    <target name="clean" description="Clean up all built files">
        <delete dir="build"/>
        <delete dir="javadoc"/>
    </target>

    <target name="compile:init" description="Prepare Java compilation">
        <mkdir dir="${java.build.dir}"/>
        <echo message="Java version used for compile: ${java.version}"/>
    </target>

    <target name="compile:java5" depends="compile:init" if="jdk1.5.available" description="Compile all minimum Java 5 specific">
	    <javac srcdir="src/java" destdir="${java.build.dir}" debug="${java.compile.debug}" source="1.5" target="1.5">
	        <includesfile name="jdk-1.5-minimum.txt" />
	        <classpath refid="classpath"/>
	    </javac>
    </target>

    <target name="compile:java3" depends="compile:init" description="Compile all minimum Java 1.3 specific">
        <javac srcdir="src/java" destdir="${java.build.dir}" debug="${java.compile.debug}" source="1.3" target="1.3">
            <excludesfile name="jdk-1.5-minimum.txt" />
            <excludesfile name="jdk-1.5-specific.txt" unless="jdk1.5.available" />
            <excludesfile name="jdk-1.4-specific.txt" unless="jdk1.4.available" />
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="compile" depends="compile:java3, compile:java5" description="Compile all Java" />

    <target name="tools:compile" depends="compile">
        <mkdir dir="${tools.build.dir}"/>
        <javac srcdir="src/tools" destdir="${tools.build.dir}">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="test:compile" depends="compile, tools:compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="src/test" destdir="${test.build.dir}">
            <excludesfile name="jdk-1.5-minimum.txt" unless="jdk1.5.available" />
            <excludesfile name="jdk-1.5-specific.txt" unless="jdk1.5.available" />
            <excludesfile name="jdk-1.4-specific.txt" unless="jdk1.4.available" />
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${test.build.dir}">
            <fileset dir="src/test">
            	<include name="**/*.xsl"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="test:compile" description="Run all acceptance tests and unit tests">
        <mkdir dir="${test.reports.dir}"/>
        <junit printsummary="no" fork="yes" forkmode="once" haltonfailure="${junit.haltonfailure}" includeantruntime="true">
            <sysproperty key="java.awt.headless" value="true"/>
            <classpath refid="classpath"/>
            <formatter type="brief" usefile="no"/>
            <formatter type="xml"/>
            <batchtest todir="${test.reports.dir}">
                <fileset dir="src/test">
                    <include name="${test.src.includes}"/>
                    <exclude name="${test.src.excludes}"/>
                    <excludesfile name="jdk-1.5-minimum.txt" unless="jdk1.5.available" />
                    <excludesfile name="jdk-1.5-specific.txt" unless="jdk1.5.available" />
                    <excludesfile name="jdk-1.4-specific.txt" unless="jdk1.4.available" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}/html"/>
        </junitreport>
        <echo message="Detailed results written to report : ${test.reports.dir}/html/index.html"/>
    </target>

    <!-- Usage: ant -Dtestcase=com.blah.SomeTest test:single -->
    <target name="test:single" depends="test:compile" description="Run a single test (specified by property 'testcase')">
        <junit printsummary="yes" fork="yes" haltonfailure="${junit.haltonfailure}" includeantruntime="true">
            <classpath refid="classpath"/>
            <formatter type="plain" usefile="no"/>
            <test name="${testcase}"/>
        </junit>
    </target>

    <target name="jdk-check" unless="jdk1.5.available">
        <echo message="***************** WARNING ***********************************"/>
        <echo message="* You are compiling XStream with JDK ${java.version}."/>
        <echo message="* Some classes that provide improved support for JDK 1.5 have"/>
        <echo message="* been excluded. This is fine for you as you aren&apos;t using"/>
        <echo message="* JDK 1.5, but the resulting Jar is not suitable for others."/>
        <echo message="* PLEASE DON&apos;T REDISTRIBUTE THIS BUILD! "/>
        <echo message="*************************************************************"/>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="xstream-${version}.jar">
            <fileset dir="${java.build.dir}"/>
        </jar>
        <antcall target="jdk-check"/>
    </target>

    <target name="javadoc" description="Build JavaDoc">
        <mkdir dir="javadoc"/>
        <javadoc destdir="javadoc" author="true" version="true" use="true" windowtitle="XStream ${version} API">
            <classpath refid="classpath"/>
            <packageset dir="src/java" defaultexcludes="yes">
                <exclude name="com/thoughtworks/xstream/core/**"/>
                <exclude name="com/thoughtworks/xstream/io/xml/xppdom/**"/>
            </packageset>
            <doctitle><![CDATA[<h1>XStream ${version}</h1>]]></doctitle>
            <bottom><![CDATA[<i>Joe Walnes, <a href="http://xstream.codehaus.org">http://xstream.codehaus.org/</a></i>]]></bottom>
        </javadoc>
    </target>

    <target name="dist" depends="jar" description="Build distribution package">
        <zip zipfile="xstream-${version}.zip">
            <zipfileset dir="." prefix="xstream-${version}">
                <include name="build.xml"/>
                <include name="build.properties"/>
                <include name="LICENSE.txt"/>
                <include name="README.txt"/>
                <include name="jdk*.txt"/>
                <include name="src/java/**"/>
                <include name="src/tools/**"/>
                <include name="src/test/**"/>
                <include name="lib/**"/>
                <include name="javadoc/**"/>
                <include name="xstream-${version}*.jar"/>
            </zipfileset>
        </zip>
        <antcall target="jdk-check"/>
    </target>

</project>

