<project name="xstream" default="library">

	<property file="build.properties"/>
    <property name="version" value="SNAPSHOT"/>

    <path id="classpath">
        <fileset dir="lib"/>
		<pathelement path="${java.build.dir}"/>
		<pathelement path="${test.build.dir}"/>
    </path>

    <target name="library" depends="clean, compile, test, jar" description="Build and test library only"/>

    <target name="all" depends="library, javadoc, website, dist" description="Rebuild everything"/>

    <target name="clean" description="Clean up all built files">
        <delete dir="build"/>
    </target>

    <target name="compile" description="Compile all Java">
        <mkdir dir="${java.build.dir}"/>
        <javac srcdir="${java.src.dir}" destdir="${java.build.dir}">
            <classpath refid="classpath"/>
        </javac>
    </target>

    	<!-- 
    		Default test target 
    	-->		
    	<target name="test" depends="test:reports">
    	</target>
    	    
    	<!--
    		Runs test reports
    	-->
    	<target name="test:reports" depends="test:all">
    		<junitreport todir="${test.reports.dir}">
    			<fileset dir="${test.reports.dir}">
    				<include name="TEST-*.xml"/>
    			</fileset>
    			<report format="frames" todir="${test.reports.dir}/html"/>
    		</junitreport>
    	</target>
    	
    	<!--
    	    Runs all tests 
    -->
    	<target name="test:all" depends="test:compile" description="Run all acceptance tests and unit tests">
    		<mkdir dir="${test.reports.dir}"/>
    		<junit printsummary="${junit.printsummary}" fork="${junit.fork}" 
               haltonfailure="${junit.haltonfailure}">
    			<classpath refid="classpath"/>
    			<jvmarg line="${junit.jvmarg}"/>
     	     <formatter type="xml"/>
     		 <formatter type="${junit.formatter}" />
    			 <batchtest fork="${junit.fork}" todir="${test.reports.dir}">
    				<fileset dir="${test.src.dir}">
    					<include name="${test.src.includes}" />
    					<exclude name="${test.src.excludes}" />
    				</fileset>
    			</batchtest>
    		</junit>
    	</target>

    	<!--
      	Runs a single test specified by property 'testcase'
    -->
    	<target name="test:single" depends="test:compile" description="Run a single test">
    		<echo message="testcase: ${testcase}"/>
    		<mkdir dir="${test.reports.dir}"/>
    		<junit printsummary="${junit.printsummary}" fork="${junit.fork}" 
               haltonfailure="${junit.haltonfailure}">
    			<classpath refid="classpath"/>
    			<jvmarg line="${junit.jvmarg}"/>
    			<formatter type="${junit.formatter}" />
             <test name="${testcase}" todir="${test.reports.dir}"/>
    		</junit>
    	</target>

    	<!--
        Compiles test src
     -->
    	<target name="test:compile" depends="compile, test:resources" description="Compile test src">
    		<mkdir dir="${test.build.dir}"/>
    		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}">
    			<classpath refid="classpath"/>
    		</javac>
    	</target>

    	<!-- 
    		Copies test resources
    	-->	
    	<target name="test:resources">
    		<copy todir="${test.build.dir}" overwrite="yes">
    			<fileset dir="${java.src.dir}">
    				<include name="**/*"/>
    				<exclude name="**/*.java"/>
    			</fileset>
    			<fileset dir="${test.src.dir}">
    				<include name="**/*"/>
    				<exclude name="**/*.java"/>
    			</fileset>
    		</copy>	
    	</target>	
    	    	
    <target name="jar" depends="compile" description="Build JARs">
        <jar jarfile="build/xstream-${version}.jar">
            <fileset dir="${java.build.dir}"/>
        </jar>
        <echo message="--- Created JAR ---"/>
        <echo message="build/xstream-${version}.jar"/>
        <echo message="--------------------"/>
    </target>

    <target name="javadoc" description="Build JavaDoc">
        <mkdir dir="build/javadoc"/>
        <javadoc destdir="build/javadoc" author="true" version="true" use="true" windowtitle="XStream ${version} API">
            <classpath refid="classpath"/>
            <packageset dir="${java.src.dir}" defaultexcludes="yes">
                <exclude name="com/thoughtworks/xstream/core/**"/>
                <exclude name="com/thoughtworks/xstream/io/path/**"/>
                <exclude name="com/thoughtworks/xstream/io/xml/xppdom/**"/>
            </packageset>
            <doctitle><![CDATA[<h1>XStream ${version} API</h1>]]></doctitle>
            <bottom><![CDATA[<i>Joe Walnes, <a href="http://xstream.codehaus.org">http://xstream.codehaus.org/</a></i>]]></bottom>
        </javadoc>
    </target>

    <target name="website" description="Build website">
        <delete dir="website/output"/>
        <mkdir dir="website/output"/>
        <exec executable="ruby" dir="website">
            <arg value="skinner.rb"/>
        </exec>
        <mkdir dir="build/website/api"/>
        <copy todir="build/website">
            <fileset dir="website/output"/>
            <fileset dir="build">
                <include name="javadoc/**"/>
            </fileset>
        </copy>
    </target>

    <target name="dist" depends="jar,website" description="Build distribution package">
        <zip zipfile="build/xstream-${version}.zip">
            <zipfileset dir=".">
                <include name="build.xml"/>
                <include name="LICENSE.txt"/>
                <include name="README.txt"/>
                <include name="src/**"/>
                <include name="lib/**"/>
            </zipfileset>
            <zipfileset dir="build">
                <include name="xstream-${version}*.jar"/>
            </zipfileset>
            <zipfileset dir="build/website" prefix="docs"/>
        </zip>
    </target>

</project>
